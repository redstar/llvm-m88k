# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -mtriple=m88k -global-isel -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s
--- |
  source_filename = "<stdin>"
  target datalayout = "E-m:e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-a:8:16-n32"
  target triple = "m88k-unknown-openbsd"

  define i32 @f1(i32 %a, i32 %b, i32 %c, i32 %d, i32 %e) {
    ret i32 0
  }

  define i32 @f2(i32 %a, i32 %b, i32 %c, i32 %d, i32 %e) {
    ret i32 0
  }

  declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #0

  attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

...
---
name:            f1
alignment:       4
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: grrb }
  - { id: 1, class: grrb }
  - { id: 2, class: grrb }
  - { id: 3, class: grrb }
  - { id: 4, class: grrb }
  - { id: 5, class: grrb }
  - { id: 6, class: _ }
  - { id: 7, class: grrb }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: grrb }
  - { id: 11, class: _ }
  - { id: 12, class: grrb }
  - { id: 13, class: grrb }
  - { id: 14, class: grrb }
  - { id: 15, class: grrb }
  - { id: 16, class: _ }
  - { id: 17, class: _ }
liveins:
  - { reg: '$r2' }
  - { reg: '$r3' }
  - { reg: '$r4' }
  - { reg: '$r5' }
  - { reg: '$r6' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.1 (%ir-block.0):
    liveins: $r2, $r3, $r4, $r5, $r6

    ; CHECK-LABEL: name: f1
    ; CHECK: liveins: $r2, $r3, $r4, $r5, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $r2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $r3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $r4
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $r5
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr = COPY $r6
    ; CHECK-NEXT: [[ADDUrrco:%[0-9]+]]:gpr = ADDUrrco [[COPY]], [[COPY1]], implicit-def $carry
    ; CHECK-NEXT: [[ADDUrrci:%[0-9]+]]:gpr = ADDUrrci $r0, $r0, implicit $carry
    ; CHECK-NEXT: [[ADDUrrco1:%[0-9]+]]:gpr = ADDUrrco [[COPY2]], [[COPY3]], implicit-def $carry
    ; CHECK-NEXT: [[ADDUrrci1:%[0-9]+]]:gpr = ADDUrrci $r0, $r0, implicit $carry
    ; CHECK-NEXT: [[ADDUrr:%[0-9]+]]:gpr = ADDUrr [[ADDUrrci]], [[COPY4]]
    ; CHECK-NEXT: [[ADDUrr1:%[0-9]+]]:gpr = ADDUrr [[ADDUrrci1]], [[COPY4]]
    ; CHECK-NEXT: [[MULUrr:%[0-9]+]]:gpr = MULUrr [[ADDUrr]], [[ADDUrr1]]
    ; CHECK-NEXT: $r2 = COPY [[MULUrr]]
    ; CHECK-NEXT: RET implicit $r2
    %0:grrb(s32) = COPY $r2
    %1:grrb(s32) = COPY $r3
    %2:grrb(s32) = COPY $r4
    %3:grrb(s32) = COPY $r5
    %4:grrb(s32) = COPY $r6
    %5:grrb(s32), %15:grrb(s32) = G_UADDO %0, %1
    %7:grrb(s32), %14:grrb(s32) = G_UADDO %2, %3
    %10:grrb(s32) = G_ADD %15, %4
    %12:grrb(s32) = G_ADD %14, %4
    %13:grrb(s32) = G_MUL %10, %12
    $r2 = COPY %13(s32)
    RET implicit $r2

...
---
name:            f2
alignment:       4
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: grrb }
  - { id: 1, class: grrb }
  - { id: 2, class: grrb }
  - { id: 3, class: grrb }
  - { id: 4, class: grrb }
  - { id: 5, class: grrb }
  - { id: 6, class: _ }
  - { id: 7, class: grrb }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: grrb }
  - { id: 11, class: grrb }
  - { id: 12, class: grrb }
  - { id: 13, class: grrb }
  - { id: 14, class: grrb }
  - { id: 15, class: grrb }
  - { id: 16, class: grrb }
liveins:
  - { reg: '$r2' }
  - { reg: '$r3' }
  - { reg: '$r4' }
  - { reg: '$r5' }
  - { reg: '$r6' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.1 (%ir-block.0):
    liveins: $r2, $r3, $r4, $r5, $r6

    ; CHECK-LABEL: name: f2
    ; CHECK: liveins: $r2, $r3, $r4, $r5, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $r2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $r3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $r4
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $r5
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr = COPY $r6
    ; CHECK-NEXT: [[ADDUrrco:%[0-9]+]]:gpr = ADDUrrco [[COPY]], [[COPY1]], implicit-def $carry
    ; CHECK-NEXT: [[ADDUrrci:%[0-9]+]]:gpr = ADDUrrci $r0, $r0, implicit $carry
    ; CHECK-NEXT: [[ADDUrrco1:%[0-9]+]]:gpr = ADDUrrco [[COPY2]], [[COPY3]], implicit-def $carry
    ; CHECK-NEXT: [[ADDUrrci1:%[0-9]+]]:gpr = ADDUrrci [[ADDUrrco1]], [[COPY4]], implicit $carry
    ; CHECK-NEXT: [[SUBUrrco:%[0-9]+]]:gpr = SUBUrrco $r0, [[ADDUrrci]], implicit-def $carry
    ; CHECK-NEXT: [[ADDUrrci2:%[0-9]+]]:gpr = ADDUrrci [[ADDUrrco]], [[COPY4]], implicit $carry
    ; CHECK-NEXT: [[MULUrr:%[0-9]+]]:gpr = MULUrr [[ADDUrrci1]], [[ADDUrrci2]]
    ; CHECK-NEXT: $r2 = COPY [[MULUrr]]
    ; CHECK-NEXT: RET implicit $r2
    %0:grrb(s32) = COPY $r2
    %1:grrb(s32) = COPY $r3
    %2:grrb(s32) = COPY $r4
    %3:grrb(s32) = COPY $r5
    %4:grrb(s32) = COPY $r6
    %5:grrb(s32), %14:grrb(s32) = G_UADDO %0, %1
    %7:grrb(s32), %13:grrb(s32) = G_UADDO %2, %3
    %10:grrb(s32), %15:grrb(s32) = G_UADDE %7, %4, %13
    %12:grrb(s32), %16:grrb(s32) = G_UADDE %5, %4, %14
    %11:grrb(s32) = G_MUL %10, %12
    $r2 = COPY %11(s32)
    RET implicit $r2

...
